(function() {
    "use strict";
    angular.module("m1cp.portal", ["m1cp.portal.forms", "m1cp.portal.microsites"])
})(),
function() {
    "use strict";

    function n(n, t, i, r, u, f) {
        function s(n) {
            var t = n.replace(/[!$^*()+|={}[?,.\]]/, function(n) {
                return "\\" + n
            });
            return new RegExp(t, "ig")
        }

        function h(n) {
            o = i.getSearchResult(n)
        }
        var e = this,
            o;
        e.searchResult;
        e.searchItemsOriginal = [];
        e.searchItems = [];
        e.searchText;
        e.searchString = "";
        e.showSearchBox = !1;
        e.toggleSearchBox = function() {
            e.showSearchBox = !e.showSearchBox;
            e.showSearchBox && angular.element(document.getElementById("headerSearchBox")).ready(function() {
                document.getElementById("headerSearchBox").focus()
            })
        };
        e.closeSearchBox = function() {
            e.showSearchBox = !1
        };
        $(document).mouseup(function(t) {
            if (e.showSearchBox) {
                var i = $(".toplinksheader-search");
                i.is(t.target) || i.has(t.target).length !== 0 || (e.showSearchBox = !1, n.$apply())
            }
        });
        window.location.search.substring("searchText=") !== -1 && (e.searchText = decodeURIComponent(window.location.search).split("searchText=")[1], e.searchText && (e.searchString = e.searchText.substring(0, 3).toLowerCase()));
        e.getSearchItems = function(n) {
            return e.searchString !== n.substring(0, 3).toLowerCase() || e.searchItems.length == 0 ? (e.searchString = n.substring(0, 3).toLowerCase(), e.searchItemsOriginal = [], e.searchItems = [], i.getSearchItems(e.searchString).then(function(t) {
                var i, r;
                if (t.SearchHits !== undefined) {
                    for (i = 0; i < t.SearchHits.length; i++) t.SearchHits[i].Name && (r = s(t.SearchHits[i].Name), e.searchItemsOriginal.toString().search(r) == -1 && e.searchItemsOriginal.push(t.SearchHits[i].Name));
                    return e.filteredResults(n), e.searchItems
                }
            })) : (e.filteredResults(n), e.searchItems)
        };
        e.filteredResults = function(n) {
            e.searchText.length > 2 && e.searchItemsOriginal.length > 0 && (e.searchItems = f("limitTo")(f("filter")(e.searchItemsOriginal, n), e.limit))
        };
        e.goToSearchPage = function() {
            var n = e.searchText ? e.searchText : "",
                t;
            n !== "" && (t = window.location.origin + "/search?searchText=" + encodeURIComponent(n), window.location.href = t)
        };
        e.tabClick = function(n) {
            n.Initialized || (n.Request.Page == 0 && (n.Request.Page = 1, n.IsLastPage = !1), n.Initialized = !0, n.enabled = !1, e.searchText = decodeURIComponent(window.location.search).split("searchText=")[1], n.Request.SearchText = e.searchText, h(n.Request), o.then(function(t) {
                if (e.tabCount++, t !== null && t !== undefined && (n.Result = t, n.Result.SearchHits && (n.Result.SearchHits.length != 0 || n.Request.Page != 1) ? (n.enabled = !0, n.IsLastPage = t.IsLastpage) : n.enabled = !1), e.tabCount === searchTabs.length)
                    for (var i = 0; i < e.searchResult.length; i++)
                        if (e.searchResult[i].enabled) {
                            e.enabledFirstTab = i;
                            break
                        }
            }, function() {
                if (e.tabCount++, e.tabCount === searchTabs.length)
                    for (var n = 0; n < e.searchResult.length; n++)
                        if (e.searchResult[n].enabled) {
                            e.enabledFirstTab = n;
                            break
                        }
            }))
        };
        e.viewMore = function(n) {
            n.Request.Page = n.Request.Page + 1;
            h(n.Request);
            o.then(function(t) {
                t !== null && t !== undefined && (n.Result.SearchHits = n.Result.SearchHits.concat(t.SearchHits), n.IsLastPage = t.IsLastpage)
            }, function() {})
        };
        e.highlightSearchtext = function(n) {
            if (n) {
                var t = s(e.searchText);
                n = n.replace(t, function(n) {
                    return '<span class="search-highlight">' + n + "<\/span>"
                })
            }
            return n
        };
        e.initializeSearch = function() {
            var n, t;
            if (e.searchText !== undefined)
                for (e.tabCount = 0, e.searchResult = searchTabs, n = 0; n < e.searchResult.length; n++) t = e.searchResult[n], e.tabClick(t)
        }
    }
    angular.module("m1cp").controller("searchController", n);
    n.$inject = ["$scope", "$http", "searchService", "$location", "$timeout", "$filter"]
}(),
function() {
    "use strict";

    function n(n, t) {
        this.value = "";
        this.getSearchItems = function(i) {
            var r = t.defer();
            return n({
                method: "GET",
                url: "/m1api/sitesearch/suggestion",
                params: {
                    searchText: i
                },
                dataType: "html",
                headers: {
                    accept: "application/json"
                }
            }).then(function(n) {
                return n.data ? r.resolve(n.data) : r.resolve("No search result available"), r.promise
            }, function(n) {
                return r.reject(n), r.promise
            })
        };
        this.getSearchResult = function(i) {
            var r = t.defer();
            return n({
                method: "POST",
                url: "/m1api/sitesearch/next",
                data: {
                    model: i
                },
                dataType: "html",
                headers: {
                    accept: "application/json"
                }
            }).then(function(n) {
                return n.data ? r.resolve(n.data) : r.resolve("No search result available"), r.promise
            }, function(n) {
                return r.reject(n), r.promise
            })
        }
    }
    angular.module("m1cp").service("searchService", n);
    n.$inject = ["$http", "$q"]
}(),
function() {
    "use strict";
    angular.module("m1cp.portal.forms", ["m1cp.core", "ngMessages"])
}(),
function() {
    "use strict";
    angular.module("m1cp.portal.forms").controller("FormController", ["$scope", "$rootScope", "$http", "$window", "$timeout", "$parse", "$compile", function(n, t, i, r, u, f) {
        function o() {
            n.m1cpNewData = angular.copy(n.m1cpData);
            n.m1cpNewData.FormID = $("#FormID").attr("value");
            n.failureMsg = !1;
            n.successMsg = !1;
            n.isPostalCodeRetreived = $(".postalcode + .retrieveBtn").length ? !1 : !0;
            $(".postalError").hide();
            n.field = !1;
            n.Addressfield = !1;
            $(".defaultradio").length && setTimeout(function() {
                var i, t;
                for ($(".defaultradio").trigger("click"), i = $("input.defaultradio"), t = 0; t < i.length; t++) n.m1cpNewData[i.closest("div[checkbox-validate]")[t].id] = i[t].value
            }, 50);
            $("input[type='checkbox'][name='stay-and-presentation']").length && (n.m1cpNewData[$("input[type='checkbox'][name='stay-and-presentation']").attr("ng-model").split(".")[1]] = !1)
        }

        function s(n) {
            var i = $(".postalCodeDatatxtarea").val().split("\n").length,
                t;
            n.style ? setTimeout(function() {
                n.style.cssText = "height:auto; padding:0;";
                n.style.cssText = "height:" + n.scrollHeight + "px"
            }, 0) : n.keyCode == 13 && i >= 5 ? n.preventDefault() : (t = this, setTimeout(function() {
                t.style.cssText = "height:auto; padding:0;";
                t.style.cssText = "height:" + t.scrollHeight + "px"
            }, 0))
        }
        n.m1cpData = {
            capresponse: ""
        };
        t.mainForm = !0;
        angular.element(".feedback").length && (t.mainForm = !1);
        n.submitm1cpForm = function() {
            angular.element("#recaptcha").length ? (grecaptcha.execute(), n.capresponse = grecaptcha.getResponse()) : n.captchaSubmit();
            r.captchaSubmit = n.captchaSubmit
        };
        n.solutionArray = [];
        n.smeSolutionclicked = function(t, i) {
            var r = n.solutionArray.indexOf(i);
            r == -1 ? n.solutionArray.push(i) : n.solutionArray.splice(r, 1)
        };
        n.captchaSubmit = function() {
            var o, s, r, l, a, e, u, v, y;
            angular.element("#recaptcha").length && (n.m1cpNewData.capresponse = grecaptcha.getResponse());
            o = typeof smepage == "undefined" ? !1 : smepage;
            s = o ? "/m1api/Form/IndexForm" : "/m1api/Form/Index";
            var f = [],
                h = [],
                c = "";
            $("input[type='checkbox'][name='stay-and-presentation']").length && (c = $("input[type='checkbox'][name='stay-and-presentation']").attr("ng-model").split(".")[1]);
            for (r in n.m1cpNewData)
                if (n.m1cpNewData.hasOwnProperty(r))
                    if (l = r.includes("file"), l == !0) a = {
                        FormKey: r,
                        FormValue: n.m1cpNewData[r]
                    }, h.push(a);
                    else if (r == "subcategory") {
                for (e in n.m1cpNewData[r]) u = {
                    FormKey: e,
                    FormValue: n.m1cpNewData[r][e]
                };
                f.push(u)
            } else r === c ? (u = n.m1cpNewData[r] ? {
                FormKey: r,
                FormValue: "Y"
            } : {
                FormKey: r,
                FormValue: "N"
            }, f.push(u)) : (u = {
                FormKey: r,
                FormValue: n.m1cpNewData[r]
            }, f.push(u));
            v = {
                requestList: f,
                fileList: h
            };
            y = {
                Values: v
            };
            i({
                method: "POST",
                url: s,
                data: angular.toJson(y),
                dataType: "json",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function(i) {
                if (n.successMsg = !1, t.mainForm = !0, i.data.isredirect) window.location.href = i.data.redirecturl;
                else if (i.data.OtherMessage) {
                    n.failureMsg = !0;
                    n.failureText = i.data.OtherMessage;
                    var r = typeof smepage == "undefined" ? !1 : smepage;
                    r || $("button[type='submit']").attr("disabled", "true")
                } else n.successMsg = !0, n.successText = i.data.SuccessMessage, t.mainForm = !1
            }, function(t) {
                var i = document.getElementById("M1CPform");
                i && (i.innerHTML = t);
                n.failureMsg = !0
            })
        };
        $(".postalcode input").on("input", function() {
            n.isPostalCodeRetreived = !1
        });
        var e;
        n.postalcodeRetrieve = function() {
            var t = $('[name="PostalCode"]').val();
            i({
                method: "POST",
                url: "/m1api/Form/FindAddress",
                data: {
                    data: t
                },
                dataType: "json",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function(t) {
                t.data.Data.IsSuccess == !0 ? (n.isPostalCodeRetreived = !0, $(".postalError").hide(), n.Addressfield = !0, n.addressdata = t.data.Data.Data, n.ShowFloorUnit = t.data.Data.Data.ShowMandatoryUnitNumber, n.addressdata.AddressLine = t.data.Data.Data.AddressLine1, n.addressdata.AddressLine2 = t.data.Data.Data.AddressLine2, n.addressdata.AddressLine4 = t.data.Data.Data.AddressLine3, n.addressdata.AddressLine.length != 0 && (n.addressdata.AddressLine = n.addressdata.AddressLine + "\r"), n.addressdata.AddressLine2.length != 0 && (n.addressdata.AddressLine2 = n.addressdata.AddressLine2 + "\r"), n.addressdata.AddressLine4.length != 0 && (n.addressdata.AddressLine4 = n.addressdata.AddressLine4), n.concatnatedTxt = n.addressdata.AddressLine.concat(n.addressdata.AddressLine2, n.addressdata.AddressLine4), n.concatnatedTxt = n.concatnatedTxt.replace(/\r$/, ""), n.addressdata.AddressLine3 = n.concatnatedTxt.replace(/\r?\n/g, "\\\n"), u(function() {
                    var t = document.getElementsByClassName("postalCodeDatatxtarea")[0],
                        i = angular.element(t).attr("ng-model"),
                        r = f(i);
                    r.assign(n, n.addressdata.AddressLine3);
                    e = document.getElementsByClassName("postalCodeDatatxtarea")[0];
                    s(e);
                    $(".postalCodeDatatxtarea").each(function(n) {
                        n >= 0 && e.addEventListener("keydown", s)
                    })
                }, 100), n.field = n.ShowFloorUnit == !0 ? !0 : !1, u(function() {
                    $(".postalError").hide();
                    for (var t in n.addressdata) n.addressdata.hasOwnProperty(t) && $(".postalCodeData textarea").each(function() {
                        var n = $(this).attr("postalretrieve"),
                            i = t.includes(n);
                        i == !0
                    })
                }, 100)) : (n.isPostalCodeRetreived = !1, n.Addressfield = !1, n.field = !1, $(".postalCodeData input").val(""), $(".postalError").hide(), $(".postalcode .postalError").show(), n.retrieveFailureMsg = t.data.Data.Message);
                n.myform.$setPristine();
                n.myform.$setUntouched()
            }, function() {
                n.RetrieveFailure = !0
            })
        };
        $(".radio-btn input").click(function() {
            ($(".m1numberYes").length || $(".m1numberNo").length) && ($(".m1numberYes").attr("disabled", !0), $("input[name=mi-customer]:checked").val() == "Yes" ? (n.monenumber = !0, $(".m1numberYes").attr("disabled", !1)) : (n.monenumber = !1, delete n.m1cpNewData[$("input.m1number").attr("ng-model").split(".")[1]], $(".m1numberNo").attr("disabled", !0), $(".m1numberNo").val(""), n.monenumber = !1))
        });
        $(document).on("click", ".marketingCheck", function() {
            var n = $('input[name="Marketing"]:checked').length > 0;
            n == !0 ? $(".feedback-form-condition input[type='radio']").attr("disabled", "true").prop("checked", !1).addClass("inactive") : $(".feedback-form-condition input[type='radio']").removeAttr("disabled").removeClass("inactive")
        });
        n.cleartext = function() {
            var t = $(event.target).attr("name");
            document.getElementById(t).value = "";
            n.myform.$setPristine()
        };
        n.resetSubFields = function() {
            for (var t, r = $(event.currentTarget).closest(".form-field-wrapper, .form-field-wrapper-full").siblings().find($("[ng-switch] [ng-model]")), i = 0; i < r.length; i++) t = $(r[i]).attr("ng-model").split("."), t[1] == "subcategory" ? n.m1cpNewData.subcategory && n.m1cpNewData.subcategory[t[2]] && delete n.m1cpNewData.subcategory[t[2]] : n.m1cpNewData[t[1]] && delete n.m1cpNewData[t[1]], $(event.currentTarget).parent().hasClass("nricvalidation") && u(function() {
                $(".nricinput input").val("")
            }, 0)
        };
        n.resetForm = function() {
            n.m1cpNewData = {};
            n.myform.$setPristine();
            n.myform.$setUntouched();
            o();
            $(".floating-select").attr("value", "");
            $(".confirmEmail .emailId").hide();
            $("input").removeClass(function(n, t) {
                var i = t.match(/\bng-invalid-\S+/ig);
                return i ? i.join(" ") : ""
            });
            n.solutionArray = [];
            var t = $(event.currentTarget).offsetParent().offset().top + -100;
            $(window).scrollTop(t)
        };
        o()
    }])
}(),
function() {
    "use strict";

    function n() {
        return {
            scope: {},
            controller: ["$scope", "$element", "$attrs", "$parse", function(n, t, i) {
                n.printRemainingCharacters = function() {
                    t.parent().find(".text-area-counter").text(i.maxlength - t[0].value.length + "/" + i.maxlength)
                }
            }],
            link: function(n, t, i) {
                if (i.textareaContent && (t[0].value = i.textareaContent), i.maxlength) {
                    n.printRemainingCharacters();
                    angular.element(t.parents().find("form")).on("reset", function() {
                        t[0].style.height = "38px";
                        n.printRemainingCharacters()
                    });
                    t.on("blur", function() {
                        t[0].textLength == 0 && (t[0].style.height = "38px")
                    });
                    t.on("focus", function() {
                        parseFloat(t[0].style.height) < 105 && (t[0].style.height = "105px")
                    });
                    t.on("keyup keydown keypress touchstart touchend", n.printRemainingCharacters);
                    n.$on("destroy", function() {
                        t.off("keyup keydown keypress touchstart touchend", n.printRemainingCharacters)
                    })
                } else t.parent().find(".text-area-counter").addClass("hide-content")
            }
        }
    }
    angular.module("m1cp.portal.forms").directive("formModuleDirective", ["$parse", function() {
        return {
            restrict: "A",
            require: "ngModel",
            link: function(n, t, i, r) {
                var e = i.type,
                    p = i.required,
                    l = i.maxcharacter,
                    a = i.maxcharacternum,
                    v = i.matchfield,
                    d = i.emailpattern,
                    g = i.phonepattern,
                    o = i.exactchar,
                    nt = i.nricnumber,
                    w = i.pattern,
                    b = i.numbers,
                    y = i.ngInit,
                    s, h, c, u, f;
                y && (s = y.split("=")[1].split("'")[1], s && (h = i.ngModel.split("."), n.m1cpData[h[h.length - 1]] = s));
                var tt = new RegExp(i.emailpattern),
                    it = new RegExp(i.phonepattern),
                    k = document.getElementsByClassName("upload").id;
                if (n.checkisvalidate = !0, n.checkupload = !0, n.checkError = !1, $(document).ready(function() {
                        $(":input").each(function() {
                            if ($(this).attr("autocomplete", "off"), $(this).attr("type") == "number") $(this).on("input", function() {
                                $(this).val($(this).val().replace(/[^0-9]/g, ""))
                            })
                        });
                        $(".upload").each(function(n) {
                            $(this).attr("id", k + "_" + (n + 1));
                            $(this).attr("ng-model", "m1cpNewData.files" + (n + 1))
                        })
                    }), $(".showonselection").hide(), $("input[type='checkbox']").change(function() {
                        var n = $('input[name="Others"]:checked').length > 0;
                        n == !0 ? $(".showonselection").show() : $(".showonselection").hide()
                    }), $("input").keydown(function(n) {
                        if ($(this).val().length == 0 && n.which === 32) return !1
                    }), c = $(".multiplecheckbox input[type='checkbox']"), $(".nricvalidation select").change(function() {
                        var n = $(this).val();
                        n == "NRIC" || n == "FIN" ? $(".nricinput input").attr("nricnumber", "true") : $(".nricinput input").removeAttr("nricnumber", "true")
                    }), b) {
                    function n(n) {
                        if (n != !1 ? r.$setValidity("invalidempty", !0) : r.$setValidity("invalidempty", !1), n) {
                            var t = n.replace(/[^0-9]/g, "");
                            return t !== n && (r.$setViewValue(t), r.$render()), t
                        }
                        return undefined
                    }
                    r.$parsers.push(n)
                }
                if ($(".nricinput input").removeAttr("nricnumber", "true"), $(t).focus(function() {
                        var n = $(t).attr("nricnumber");
                        if (n == "true") {
                            function n(n) {
                                var u = [],
                                    o;
                                if (u.multiples = [2, 7, 6, 5, 4, 3, 2], n && n != "") r.$setValidity("invalidempty", !0);
                                else return r.$setValidity("invalidempty", !1), !1;
                                if (n.length != 9) return r.$setValidity("nricinvalid", !1), !1;
                                r.$setValidity("nricinvalid", !0);
                                var e = 0,
                                    s = 0,
                                    i, t = n[0],
                                    f = n[n.length - 1];
                                if ((t = t.toUpperCase(), f = f.toUpperCase(), t != "S" && t != "T" && t != "F" && t != "G") || (r.$setValidity("nricinvalid", !0), i = n.substr(1, n.length - 2), isNaN(i))) return r.$setValidity("nricinvalid", !1), !1;
                                for (r.$setValidity("nricinvalid", !0); i != 0;) e += i % 10 * u.multiples[u.multiples.length - (1 + s++)], i /= 10, i = Math.floor(i);
                                return o = t == "S" ? ["J", "Z", "I", "H", "G", "F", "E", "D", "C", "B", "A"] : t == "T" ? ["G", "F", "E", "D", "C", "B", "A", "J", "Z", "I", "H"] : t == "F" ? ["X", "W", "U", "T", "R", "Q", "P", "N", "M", "L", "K"] : ["R", "Q", "P", "N", "M", "L", "K", "X", "W", "U", "T"], f != o[e % 11] ? r.$setValidity("nricinvalid", !1) : r.$setValidity("nricinvalid", !0), n
                            }
                            r.$parsers.push(n)
                        }
                    }), c.click(function() {
                        c.is(":checked") ? (n.checkisvalidate = !1, n.checkError = !1) : (n.checkisvalidate = !0, n.checkError = !0)
                    }), p) {
                    function n(n) {
                        return e == "number" ? n !== null ? r.$setValidity("invalidempty", !0) : r.$setValidity("invalidempty", !1) : n !== "" ? r.$setValidity("invalidempty", !0) : r.$setValidity("invalidempty", !1), n
                    }
                    r.$parsers.push(n)
                }
                if (w) {
                    function n(n) {
                        var t = document.activeElement.pattern,
                            t = new RegExp(i.pattern),
                            u = document.activeElement.required;
                        return t.test(n) ? (r.$setValidity("invalidpattern", !0), n) : u || n != "" ? (r.$setValidity("invalidpattern", !1), undefined) : (r.$setValidity("invalidpattern", !0), n)
                    }
                    r.$parsers.push(n)
                }
                if (l) {
                    function n(n) {
                        return n.length <= l ? r.$setValidity("maxcharacter", !0) : r.$setValidity("maxcharacter", !1), n
                    }
                    r.$parsers.push(n)
                }
                if (o) {
                    function n(n) {
                        return $(".postalError").hide(), e == "number" ? n == null ? r.$setValidity("invalidempty", !1) : n && n.toString().length == o ? r.$setValidity("exactchar", !0) : r.$setValidity("exactchar", !1) : n == null ? r.$setValidity("invalidempty", !1) : n && n.length == o ? r.$setValidity("exactchar", !0) : r.$setValidity("exactchar", !1), n
                    }
                    r.$parsers.push(n)
                }
                if (a) {
                    function n(n) {
                        return n.toString().length <= a ? r.$setValidity("maxcharacter", !0) : r.$setValidity("maxcharacter", !1), n
                    }
                    r.$parsers.push(n)
                }
                if ($(".confirmEmail .emailId").hide(), v) {
                    function n(n) {
                        var t = document.getElementById(v).value;
                        return t.length > 0 && (t == n || n.length < 1 ? $(".confirmEmail .emailId").hide() : $(".confirmEmail .emailId").show()), n
                    }
                    r.$parsers.push(n)
                }
                if (e == "file") {
                    u = parseInt(i.allowedsize);
                    f = i.allowedextns.split(",");
                    n.fileTypeError = !1;
                    n.fileSizeLarge = !1;
                    t.bind("change", function() {
                        var e = $(this).attr("id").split("_").pop(),
                            o, t, i;
                        for (delete n.m1cpNewData["files" + e], o = 0; o < this.files.length; o++) {
                            t = this.files[o];
                            s(t, function(n) {
                                i.data = n.target.result
                            });

                            function s(n, t) {
                                var i = new FileReader;
                                i.readAsDataURL(n);
                                i.onload = t;
                                n.data = i.result;
                                i.onerror = function() {}
                            }
                            i = {};
                            setTimeout(function() {
                                var o;
                                if (u && t.size > u && n.$apply(function() {
                                        r.$setValidity("misMatch", !0);
                                        r.$setValidity("maxSize", !1)
                                    }), o = t.name.split(".").pop().toLowerCase(), f && $.inArray(o, f) == -1 && n.$apply(function() {
                                        r.$setValidity("misMatch", !1);
                                        r.$setValidity("maxSize", !0)
                                    }), !(u && t.size > u) && !(f && $.inArray(o, f) == -1)) {
                                    n.m1cpNewData["files" + e] || (n.m1cpNewData["files" + e] = []);
                                    var s = t.name,
                                        h = t.size,
                                        c = t.type,
                                        l = t.data;
                                    i.name = s;
                                    i.size = h;
                                    i.type = c;
                                    n.m1cpNewData["files" + e].push(i);
                                    n.$apply(function() {
                                        n.m1cpNewData["files" + e];
                                        n.checkupload = !1;
                                        r.$setValidity("misMatch", !0);
                                        r.$setValidity("maxSize", !0)
                                    })
                                }
                            }, 1e3)
                        }
                    });
                    angular.element(t.parents().find("form")).on("reset", function() {
                        r.$setValidity("misMatch", !0);
                        r.$setValidity("maxSize", !0)
                    })
                }
                n.removeFile = function(t) {
                    var i = $(event.currentTarget).closest(".selectedFiles").siblings(".fileContainer").find("input"),
                        r = i.attr("id").split("_").pop();
                    n.m1cpNewData["files" + r].splice(t, 1);
                    i.val("");
                    i.trigger("change")
                };
                n.clearFile = function() {
                    n.m1cpNewData.files1.length == 0 && (n.checkupload = !0)
                }
            }
        }
    }]);
    angular.module("m1cp.portal.forms").directive("formTextarea", n);
    angular.module("m1cp.portal.forms").directive("datepickerComponent", function() {
        return {
            restrict: "A",
            scope: {
                formObject: "="
            },
            controller: ["$scope", "$element", "$attrs", function(n) {
                n.setValue = function(t) {
                    t && (n.formObject.$viewValue = t, n.formObject.$commitViewValue(), n.formObject.$render())
                }
            }],
            link: function(n, t, i) {
                function a() {
                    var n = new Date(t.data("datepicker").pickers[0].getDate()),
                        i = n.getDate(),
                        r = n.getMonth() + 1,
                        u = n.getFullYear();
                    return ("0" + i).slice(-2) + "/" + ("0" + r).slice(-2) + "/" + ("000" + u).slice(-4)
                }

                function o(n) {
                    t.data("datepicker").pickers[0].setDate(n);
                    v(n)
                }

                function v(n) {
                    var i = $(t.children()[0]);
                    i.attr("value", n);
                    i.val(n)
                }

                function s(n) {
                    return n == "+0d" || n == "-0d" ? (new Date).getTime() : n == "" ? 0 : new Date(n.substring(3, 6) + n.substring(0, 3) + n.substring(6)).getTime()
                }
                var y = $(t.children()[0]),
                    p = angular.element(t.children()[0]).attr("required"),
                    h = i.disableDate.trim(),
                    r, e, c, l, u, f;
                i.defaultViewDate ? (e = !0, r = i.defaultViewDate.trim()) : (e = !1, r = new Date);
                c = h ? 1 : 0;
                c && (l = h == "future" ? 1 : 0, l ? i.endDate && i.startDate ? (u = i.endDate.trim(), f = i.startDate.trim()) : (u = "+0d", f = "") : (u = "", f = "-0d"));
                t.on("changeDate changeMonth changeYear", function() {
                    event.path[0].textContent.toLowerCase() == "clear" ? o("") : v(a())
                });
                $(document).ready(function() {
                    e && n.setValue(r);
                    n.formObject.$parsers.push(function(t) {
                        var c = new RegExp("^[0-3][0-9]/[0-2][0-9]/[0-9]{4}$"),
                            i;
                        if (c.test(t))
                            if (i = s(t), isNaN(i)) n.formObject.$setValidity("invalidpattern", !1);
                            else {
                                o(t);
                                var r = s(f),
                                    e = s(u),
                                    h = !1;
                                (r == 0 || !isNaN(r) && i > r) && (e == 0 || !isNaN(e) && i < e) && (h = !0);
                                h ? a() === t ? n.formObject.$setValidity("invalidpattern", !0) : n.formObject.$setValidity("invalidpattern", !1) : n.formObject.$setValidity("invalidpattern", !1)
                            }
                        else p || t != "" ? n.formObject.$setValidity("invalidpattern", !1) : (o(""), n.formObject.$setValidity("invalidpattern", !0));
                        return t
                    })
                });
                angular.element(t.parents().find("form")).on("reset", function() {
                    ctrl.$setValidity("invalidpattern", !0);
                    e && n.setValue(r)
                });
                t.datepicker({
                    keyboardNavigation: !0,
                    autoclose: !0,
                    todayHighlight: !0,
                    startDate: f,
                    endDate: u,
                    defaultViewDate: r,
                    maxViewMode: 2,
                    zIndexOffset: 9999,
                    clearBtn: !0,
                    inputs: y,
                    immediateUpdates: !0,
                    forceParse: !1,
                    format: "dd/mm/yyyy"
                })
            },
            controllerAs: "ctrl"
        }
    });
    angular.module("m1cp.portal.forms").directive("showFloor", function() {
        return {
            restrict: "A",
            replace: !0,
            template: function(n, t) {
                var r = t.ngIf,
                    u = t.showFloor,
                    i;
                return r && (u += " && " + r), i = n.get(0), angular.forEach(i.attributes, function(n) {
                    n.value = ""
                }), t.$set("ng-if", u), i.outerHTML
            }
        }
    });
    angular.module("m1cp.portal.forms").directive("confirmField", function() {
        return {
            require: "ngModel",
            scope: {
                reference: "=confirmField"
            },
            link: function(n, t, i, r) {
                r.$validators.noMatch = function(t) {
                    return t == n.reference
                };
                n.$watch("reference", function() {
                    r.$validate()
                });
                t.bind("cut copy paste", function(n) {
                    return n.preventDefault(), !1
                })
            }
        }
    });
    angular.module("m1cp.portal.forms").directive("nricValidation", function() {
        return {
            restrict: "A",
            require: "ngModel",
            link: function(n, t, i, r) {
                function u(n) {
                    var t, u, o;
                    if (n) {
                        t = n;
                        u = [];
                        u.multiples = [2, 7, 6, 5, 4, 3, 2];
                        t && t != "" ? r.$setValidity("invalidempty", !0) : r.$setValidity("invalidempty", !1);
                        t.length != 9 ? r.$setValidity("nriclong", !1) : r.$setValidity("nriclong", !0);
                        var e = 0,
                            s = 0,
                            i, f = t[0].toUpperCase(),
                            h = t[t.length - 1].toUpperCase();
                        for (f != "S" && f != "T" ? r.$setValidity("nricinvalid", !1) : r.$setValidity("nricinvalid", !0), i = t.substr(1, t.length - 2), isNaN(i) ? r.$setValidity("nricinvalid", !1) : r.$setValidity("nricinvalid", !0); i != 0;) e += i % 10 * u.multiples[u.multiples.length - (1 + s++)], i /= 10, i = Math.floor(i);
                        return o = f == "S" ? ["J", "Z", "I", "H", "G", "F", "E", "D", "C", "B", "A"] : ["G", "F", "E", "D", "C", "B", "A", "J", "Z", "I", "H"], h != o[e % 11] ? r.$setValidity("nricinvalid", !1) : r.$setValidity("nricinvalid", !0), n
                    }
                }
                r.$parsers.push(u)
            }
        }
    });
    angular.module("m1cp.portal.forms").directive("finValidation", function() {
        return {
            restrict: "A",
            require: "ngModel",
            link: function(n, t, i, r) {
                function u(n) {
                    var t, f, s;
                    if (n) {
                        t = n;
                        f = [];
                        f.multiples = [2, 7, 6, 5, 4, 3, 2];
                        t && t != "" ? r.$setValidity("invalidempty", !0) : r.$setValidity("invalidempty", !1);
                        t.length != 9 ? r.$setValidity("finlong", !1) : r.$setValidity("finlong", !0);
                        var o = 0,
                            h = 0,
                            i, u = t[0],
                            e = t[t.length - 1];
                        if (u = u.toUpperCase(), e = e.toUpperCase(), u != "F" && u != "G" && u != "M" ? r.$setValidity("fininvalid", !1) : r.$setValidity("fininvalid", !0), i = t.substr(1, t.length - 2), isNaN(i) ? r.$setValidity("fininvalid", !1) : r.$setValidity("fininvalid", !0), !isNaN(i))
                            while (i != 0) o += i % 10 * f.multiples[f.multiples.length - (1 + h++)], i /= 10, i = Math.floor(i);
                        return s = (u == "F" ? ["X", "W", "U", "T", "R", "Q", "P", "N", "M", "L", "K"] : (u == "G" ? ["R", "Q", "P", "N", "M", "L", "K", "X", "W", "U", "T"] : ["T", "R", "Q", "P", "N", "J", "L", "K", "X", "W", "U"])), e != s[o % 11] ? r.$setValidity("fininvalid", !1) : r.$setValidity("fininvalid", !0), n
                    }
                }
                r.$parsers.push(u)
            }
        }
    })
}(),
function() {
    "use strict"
}(),
function() {
    "use strict"
}(),
function() {
    "use strict";
    angular.module("m1cp.portal.microsites", ["m1cp.portal.forms"])
}(),
function() {
    "use strict"
}(),
function() {
    "use strict";
    angular.module("m1cp.portal.microsites").directive("tabscrollingComponent", function() {
        return {
            restrict: "A",
            link: function(n, t, i) {
                var f = parseInt(i.minitem),
                    r = parseInt(i.maxitem),
                    u = angular.element(t.children());
                angular.forEach(u, function(t, i) {
                    angular.element(t).hasClass("active") && (n.initialSlide = i);
                    angular.element(t).bind("click", function(n) {
                        var t = angular.element(n.currentTarget);
                        angular.forEach(u, function(n) {
                            angular.element(n).removeClass("active")
                        });
                        t.addClass("active")
                    })
                });
                angular.element(document).ready(function() {
                    t.slick({
                        lazyLoad: "ondemand",
                        slidesToShow: r,
                        autoplay: !1,
                        infinite: !1,
                        centerMode: !1,
                        arrows: !1,
                        dots: !1,
                        draggable: !1,
                        focusOnSelect: !1,
                        pauseOnFocus: !1,
                        pauseOnHover: !1,
                        mobilefirst: !0,
                        nextArrow: '<i class="slick-next glyphicon glyphicon-chevron-right"><\/i>',
                        prevArrow: '<i class="slick-prev glyphicon glyphicon-chevron-left"><\/i>',
                        responsive: [{
                            breakpoint: 1204,
                            settings: {
                                autoplay: !1,
                                infinite: !1,
                                arrows: !0,
                                dots: !1,
                                centerMode: !1,
                                slidesToScroll: 1,
                                slidesToShow: r
                            }
                        }, {
                            breakpoint: 768,
                            settings: {
                                autoplay: !1,
                                infinite: !1,
                                arrows: !0,
                                dots: !1,
                                centerMode: !1,
                                slidesToScroll: 1,
                                slidesToShow: f,
                                initialSlide: n.initialSlide
                            }
                        }]
                    })
                })
            },
            controllerAs: "ctrl"
        }
    });
    angular.module("m1cp.portal.microsites").directive("serviceAnnocamentViewmore", ["$timeout", function() {
        return {
            restrict: "A",
            link: function(n, t, i) {
                var u = parseInt(i.itemshown),
                    f = t.find(".view-more"),
                    e = document.getElementsByClassName("annoucment"),
                    o = angular.element(e),
                    r;
                f.bind("click", function() {
                    var n = 0,
                        t;
                    angular.forEach(o, function(t) {
                        r = angular.element(t).hasClass("hidden-annoucment");
                        r && n < u && (angular.element(t).removeClass("hidden-annoucment"), n++)
                    });
                    r || (t = document.getElementsByClassName("view-more"), angular.element(t).addClass("hidden-annoucment"))
                })
            }
        }
    }]);
    angular.module("m1cp").directive("countdownCounter", ["$interval", "$timeout", "$window", function(n, t, i) {
        return {
            restrict: "EA",
            controller: ["$scope", function(t) {
                t.days;
                t.hours;
                t.minutes;
                t.secs;
                t.count_down = function(r) {
                    i.start = parseFloat(r);
                    t.end = 0;
                    i.start >= t.end ? t.mytime = n(t.calculated_time, 1e3) : n.cancel(t.mytime)
                };
                t.calculated_time = function() {
                    var r, o, u, s, f, h, e, c;
                    i.start < t.end ? n.cancel(t.mytime) : (t.days = Math.floor(i.start / 86400), t.hours = Math.floor((i.start - t.days * 86400) / 3600), t.minutes = Math.floor((i.start - t.days * 86400 - t.hours * 3600) / 60), t.seconds = Math.floor(i.start - t.days * 86400 - t.hours * 3600 - t.minutes * 60), r = angular.element(document.getElementById("days1")), o = angular.element(document.getElementById("days2")), o.html(t.days % 10), t.days.toString().length === 1 ? r.html(0) : r.html(t.days.toString().slice(0, 1)), u = angular.element(document.getElementById("hours1")), s = angular.element(document.getElementById("hours2")), s.html(t.hours % 10), t.hours.toString().length === 1 ? u.html(0) : u.html(t.hours.toString().slice(0, 1)), f = angular.element(document.getElementById("minutes1")), h = angular.element(document.getElementById("minutes2")), h.html(t.minutes % 10), t.minutes.toString().length === 1 ? f.html(0) : f.html(t.minutes.toString().slice(0, 1)), e = angular.element(document.getElementById("seconds1")), c = angular.element(document.getElementById("seconds2")), c.html(t.seconds % 10), t.seconds.toString().length === 1 ? e.html(0) : e.html(t.seconds.toString().slice(0, 1)), i.start = i.start - 1)
                }
            }],
            link: function(n, t, i) {
                var h = new Date(i.currentdate),
                    r = new Date(i.dealstartdate),
                    c = new Date(i.dealenddate),
                    l = document.getElementById("dealStartdate"),
                    a = angular.element(l),
                    u, f, e, o, s;
                a.html(r.getDate());
                u = document.getElementById("dealEnddate");
                f = angular.element(u);
                f.html(c.getDate());
                e = document.getElementById("dealMonth");
                o = angular.element(e);
                o.html(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"][r.getMonth()]);
                s = (r - h) / 1e3;
                n.count_down(s)
            }
        }
    }]);
    angular.module("m1cp.portal.microsites").directive("mapComponent", function() {
        return {
            restrict: "EA",
            scope: {
                searchradius: "=",
                setmapid: "&"
            },
            link: function(n, t, i) {
                n.searchradius = parseInt(i.searcharound);
                n.setmapid({
                    id: i.id
                })
            }
        }
    });
    angular.module("m1cp.portal.microsites").directive("newsReleaseDescription", function() {
        return {
            restrict: "A",
            scope: {},
            link: function(n, t) {
                var i = document.createElement("p"),
                    r;
                angular.element(i).addClass("font-body1 news-release-description");
                r = t[0].innerText = t[0].innerText.trim().replace(/\s+/g, " ").substr(0, 200) + "...";
                angular.element(i).html(r);
                t[0].parentNode.replaceChild(i, t[0])
            }
        }
    })
}(),
function() {
    "use strict";

    function n(n, t) {
        this.value = "";
        this.getAnnualReport = function(i) {
            var r = t.defer();
            return n({
                method: "POST",
                url: "/m1api/AnnualReports/Reports",
                params: {
                    page: i
                },
                dataType: "html",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function(n) {
                return n.data ? r.resolve(n.data) : r.resolve("No report available"), r.promise
            }, function(n) {
                return r.reject(n), r.promise
            })
        }
    }

    function t(n, t) {
        this.value = "";
        this.getNewsReleases = function(i) {
            var r = t.defer();
            return n({
                method: "POST",
                url: "/m1api/Announcement/LoadMoreNewsRelease",
                data: {
                    request: i
                },
                dataType: "html",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function(n) {
                return n.data ? r.resolve(n.data) : r.resolve("No data available"), r.promise
            }, function(n) {
                return r.reject(n), r.promise
            })
        }
    }

    function i(n, t) {
        this.value = "";
        this.getSmartRoamData = function(i, r) {
            var u = t.defer();
            return n({
                method: "GET",
                url: window.location.href + "?c=api&rId=SmartRoamTableCreation",
                params: {
                    fromDestination: i,
                    toDestination: r
                },
                dataType: "html",
                headers: {
                    accept: "application/json"
                }
            }).then(function(n) {
                return n.data ? u.resolve(n.data) : u.resolve("No report available"), u.promise
            }, function(n) {
                return u.reject(n), u.promise
            })
        }
    }

    function r(n, t) {
        this.value = "";
        this.getDataPackData = function(i) {
            var r = t.defer();
            return n({
                method: "GET",
                url: window.location.href + "?c=api&rId=DataPassport",
                params: {
                    CountryName: i
                },
                dataType: "html",
                headers: {
                    accept: "application/json"
                }
            }).then(function(n) {
                return n.data ? r.resolve(n.data) : r.resolve("No report available"), r.promise
            }, function(n) {
                return r.reject(n), r.promise
            })
        }
    }
    angular.module("m1cp.portal.microsites").service("serviceAnnouncementdetail", ["$http", "$q", function(n, t) {
        this.value = "";
        this.getserviceAnnouncementdetail = function(i) {
            var r = t.defer();
            return n({
                method: "POST",
                url: "/m1api/Announcement/LoadMoreServiceAnnocuemnt",
                data: {
                    request: i
                },
                dataType: "html",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function(n) {
                return n.data ? r.resolve(n.data) : r.resolve("No data available"), r.promise
            }, function(n) {
                return r.reject(n), r.promise
            })
        }
    }]);
    angular.module("m1cp.portal.microsites").service("eventAnnouncementdetail", ["$http", "$q", function(n, t) {
        this.value = "";
        this.geteventAnnouncementdetail = function(i) {
            var r = t.defer();
            return n({
                method: "POST",
                url: "/m1api/Announcement/LoadMoreRoadShows",
                data: {
                    request: i
                },
                dataType: "html",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function(n) {
                return n.data ? r.resolve(n.data) : r.resolve("No data available"), r.promise
            }, function(n) {
                return r.reject(n), r.promise
            })
        }
    }]);
    angular.module("m1cp.portal.microsites").service("newseventAnnouncementdetail", ["$http", "$q", function(n, t) {
        this.value = "";
        this.getnewseventAnnouncementdetail = function(i, r, u) {
            var f = t.defer(),
                e, o;
            return r == "dropdown" ? (e = window.location.href + "?c=api&rId=ExchangeAnnouncement", o = {
                year: i,
                onSelection: !0
            }, n({
                method: "POST",
                url: e,
                params: o,
                dataType: "html",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function(n) {
                return n.data ? f.resolve(n.data) : f.resolve("No data available"), f.promise
            }, function(n) {
                return f.reject(n), f.promise
            })) : (e = "/m1api/DynamicTable/LoadMoreExchangeAnnocement", o = JSON.stringify({
                request: u
            }), n({
                method: "POST",
                url: e,
                data: o,
                dataType: "html",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function(n) {
                return n.data ? f.resolve(n.data) : f.resolve("No data available"), f.promise
            }, function(n) {
                return f.reject(n), f.promise
            }))
        }
    }]);
    angular.module("m1cp.portal.microsites").service("contactUsDetailService", ["$http", "$q", function(n, t) {
        this.value = "";
        this.getstores = function() {
            var i = t.defer();
            return n({
                method: "GET",
                url: "/m1api/Map/ContactUs",
                headers: {
                    accept: "application/json"
                }
            }).then(function(n) {
                return n.data ? i.resolve(n.data) : i.resolve("No Shop available"), i.promise
            }, function(n) {
                return i.reject(n), i.promise
            })
        };
        this.getFilteredstores = function(i, r) {
            var u = t.defer();
            return n({
                method: "GET",
                url: "",
                params: {
                    shoptype: i,
                    subtype: r
                },
                headers: {
                    accept: "application/json"
                }
            }).then(function(n) {
                return n.data ? u.resolve(n.data) : u.resolve("No Shop available"), u.promise
            }, function(n) {
                return u.reject(n), u.promise
            })
        }
    }]);
    angular.module("m1cp.portal.microsites").service("annualReportService", n);
    n.$inject = ["$http", "$q"];
    angular.module("m1cp.portal.microsites").service("newsReleasesService", t);
    t.$inject = ["$http", "$q"];
    angular.module("m1cp.portal.microsites").service("smartRoamRateService", i);
    i.$inject = ["$http", "$q"];
    angular.module("m1cp.portal.microsites").service("dataPassportService", r);
    r.$inject = ["$http", "$q"];
    angular.module("m1cp.portal.microsites").service("iddRatesServies", ["$http", "$q", function(n, t) {
        this.value = "";
        this.getiddRates = function(i) {
            var r = t.defer(),
                u = window.location.href + "?c=api&rId=IDDDetails";
            return n({
                method: "GET",
                url: u,
                dataType: "html",
                params: {
                    CountryName: i
                },
                headers: {
                    accept: "application/json"
                }
            }).then(function(n) {
                return n.data ? r.resolve(n.data) : r.resolve("No Shop available"), r.promise
            }, function(n) {
                return r.reject(n), r.promise
            })
        }
    }]);
    angular.module("m1cp.portal.microsites").service("financialResults", ["$http", "$q", function(n, t) {
        this.getFinancialResult = function(i) {
            var r = t.defer(),
                u = window.location.href + "?c=api&rId=AccordionListWithThumbnail";
            return n({
                method: "GET",
                url: u,
                dataType: "html",
                params: {
                    year: i,
                    isSelection: !0
                },
                headers: {
                    accept: "application/json"
                }
            }).then(function(n) {
                return n.data ? r.resolve(n.data) : r.resolve("No Result available"), r.promise
            }, function(n) {
                return r.reject(n), r.promise
            })
        }
    }])
}(),
function() {
    "use strict"
}(),
function() {
    "use strict";

    function n(n, t, i) {
        function r() {
            var r = window.location.pathname,
                i = r.lastIndexOf("roaming-rates/"),
                t;
            i == -1 ? n.optionSelected = "" : (t = window.location.pathname.slice(i).split("/")[1], n.optionSelected = t == undefined || t == null || t == "" ? "" : t)
        }

        function u(r) {
            var u = t.getDataPackData(r);
            u.then(function(t) {
                var r = angular.element(document.getElementById("datapack-component")),
                    u, f;
                r.removeClass("visible-none");
                r.html("");
                u = i(t);
                f = u(n);
                r.append(f)
            }, function() {})
        }
        n.country = "";
        n.redirecturl = "";
        n.changeCountryOption = function() {
            var i = angular.element(event.currentTarget).children()[event.currentTarget.selectedIndex],
                t;
            n.country = i.attributes.country.value;
            t = i.attributes.url;
            n.redirecturl = t === "" || t == null ? "" : t.value
        };
        n.fetchData = function() {
            n.country != "" && n.redirecturl == "" && u(n.country)
        };
        r()
    }
    angular.module("m1cp.portal.microsites").controller("overseasController", n);
    n.$inject = ["$scope", "dataPassportService", "$compile"]
}(),
function() {
    "use strict";

    function n(n, t, i, r, u) {
        function f() {
            var i = t.getiddRates(n.country);
            i.then(function(t) {
                var r = t,
                    f = u(r),
                    e = f(n),
                    o = document.getElementById("iDDRatesDetail"),
                    i = angular.element(o);
                i.removeClass("visible-none");
                i.html(e)
            }, function() {})
        }
        n.country = "";
        n.enablelink = !0;
        n.changeFilterOption = function() {
            if (n.enablelink = n.optionSelected != "" ? !1 : !0, n.enablelink) n.country = "", n.redirecturl = "";
            else {
                var t = angular.element(event.currentTarget).children()[n.optionSelected];
                n.country = t.getAttribute("country")
            }
        };
        n.goIddRates = function() {
            f(n.country)
        }
    }
    angular.module("m1cp.portal.microsites").controller("iddratesController", n);
    n.$inject = ["$scope", "iddRatesServies", "$location", "$window", "$compile"]
}(),
function() {
    "use strict";

    function n(n, t, i) {
        function r(r, u) {
            var f = t.getSmartRoamData(r, u);
            f.then(function(t) {
                var r = angular.element(document.getElementById("smartroam-content")),
                    u, f;
                r.removeClass("visible-none");
                r.html("");
                u = i(t);
                f = u(n);
                r.append(f)
            }, function() {})
        }
        n.fromDestination = "";
        n.toDestination = "";
        n.getSmartRoam = function() {
            n.fromDestination != "" && n.toDestination != "" && r(n.fromDestination, n.toDestination)
        }
    }
    angular.module("m1cp.portal.microsites").controller("smartRoamRate", n);
    n.$inject = ["$scope", "smartRoamRateService", "$compile"]
}(),
function() {
    "use strict";

    function n(n, t, i) {
        function u(r, u, f) {
            var e = t.getnewseventAnnouncementdetail(r, u, f);
            e.then(function(t) {
                var h = t,
                    c = i(h),
                    o = c(n),
                    r, e, s;
                u == "dropdown" ? (r = document.getElementById("newsandannouncementtable"), e = angular.element(r), e.html(o), f = angular.fromJson(document.getElementById("announcementrequest").value)) : (r = document.getElementById("newsandannouncementtable"), e = angular.element(r).find("tbody"), e.append(o));
                i(document.getElementsByClassName("custom-table-component"))(n);
                s = t.search("IsLastpage='True'");
                n.loadmore = s != -1 ? !1 : !0
            }, function() {})
        }
        n.daysArray = [];
        n.loadmore = !0;
        n.requestobject = angular.fromJson(document.getElementById("announcementrequest").value);
        var r = n.requestobject.Pagination.Page;
        n.changeYear = function() {
            r = 1;
            n.selectedmonth = n.optionSelected;
            n.requestobject.Pagination.Page = 1;
            n.requestobject.Filters[0].Start = n.selectedmonth + "-01-01T00:00:00Z";
            n.requestobject.Filters[0].End = parseInt(n.selectedmonth) + "-12-31T23:59:59Z";
            u(n.selectedmonth, "dropdown", n.requestobject)
        };
        n.loadmoreannoucmnet = function() {
            r = r + 1;
            n.requestobject.Pagination.Page = r;
            u(n.selectedmonth, "loadmore", n.requestobject)
        }
    }
    angular.module("m1cp.portal.microsites").controller("newseventController", n);
    n.$inject = ["$scope", "newseventAnnouncementdetail", "$compile"]
}(),
function() {
    "use strict";

    function n(n, t, i) {
        function r() {
            var t = document.getElementById("annual-report").firstElementChild,
                r = t.getAttribute("data-item-found"),
                i = "False";
            r == "True" && (i = t.getAttribute("data-hasNextPage"));
            n.Viewall = i == "True"
        }

        function u(r) {
            var u = t.getAnnualReport(r);
            u.then(function(t) {
                var r = document.getElementById("annual-report"),
                    u = r.firstElementChild;
                u.innerHTML += angular.element(t).html();
                i(r)(n);
                n.Viewall = angular.element(t)[0].getAttribute("data-hasnextpage") == "True"
            }, function() {})
        }
        n.page = 1;
        n.Viewall = !1;
        r();
        n.viewMore = function() {
            n.page = n.page + 1;
            u(n.page)
        }
    }
    angular.module("m1cp.portal.microsites").controller("annualReport", n);
    n.$inject = ["$scope", "annualReportService", "$compile"]
}(),
function() {
    "use strict";

    function n(n, t, i) {
        function e(r, f) {
            var e = i.getNewsReleases(r);
            e.then(function(i) {
                var s = i,
                    h = t(s),
                    r = h(n),
                    e = document.getElementById("news-releases"),
                    o = angular.element(e);
                f == "dropdown" ? o.html(r) : o.append(r);
                t(e)(n);
                u()
            }, function() {})
        }

        function u() {
            var u = document.getElementById("news-releases"),
                t = angular.element(u).children(),
                i, r;
            t.length && (i = t[t.length - 1], r = i.getAttribute("data-item-found"), n.Viewall = r == "true")
        }

        function f() {
            t(document.getElementById("news-releases"))(n)
        }
        var r = request;
        n.selectedYear = serveryear.toString();
        n.changeYear = function() {
            var t = document.getElementById("news-releases");
            angular.element(t.parentElement.getElementsByClassName("view-all")).removeClass("hidden-component");
            angular.element(t.parentElement.getElementsByClassName("view-less")).addClass("hidden-component");
            n.selectedDate;
            r.Pagination.Page = 1;
            n.dateupdatetion();
            e(r, "dropdown")
        };
        n.dateupdatetion = function() {
            n.yearstartdate = n.selectedYear + "-01-01T00:00:00Z";
            n.yearlastdate = n.selectedYear + "-12-31T23:59:59Z";
            r.Filters[0].Start = n.yearstartdate;
            r.Filters[0].End = n.yearlastdate
        };
        document.getElementsByClassName("component-viewall-Link")[0].addEventListener("click", f);
        document.getElementsByClassName("component-viewall-Link")[1].addEventListener("click", f);
        u()
    }
    angular.module("m1cp.portal.microsites").controller("newsReleases", n);
    n.$inject = ["$scope", "$compile", "newsReleasesService"]
}(),
function() {
    "use strict";

    function n(n, t, i) {
        function f() {
            var u = document.getElementById("serviesAnnoucment"),
                t = angular.element(u).children(),
                i, r;
            t.length && (i = t[t.length - 1], r = i.getAttribute("data-hasnextpage"), n.Viewall = r == "True")
        }

        function u(r, u) {
            var e = i.getserviceAnnouncementdetail(r);
            e.then(function(i) {
                var s = i,
                    h = t(s),
                    r = h(n),
                    e = document.getElementById("serviesAnnoucment"),
                    o = angular.element(e);
                u == "dropdown" ? o.html(r) : o.append(r);
                t(e)(n);
                f()
            }, function() {})
        }

        function e(n, t) {
            return new Date(t, n, 0).getDate()
        }
        n.daysArray = [];
        var r = request;
        n.selectedMonthYear = serverdate;
        n.selectedmonth = n.selectedMonthYear.split("-")[0];
        n.selectedyear = n.selectedMonthYear.split("-")[1];
        n.yearFlag = !0;
        n.changeMonthYear = function() {
            n.selectedDate && n.selectedMonthYear ? (n.selectedmonth = n.selectedMonthYear.split("-")[0], n.selectedyear = n.selectedMonthYear.split("-")[1], n.changeDate()) : (n.monthstartdate = "01", n.selectedmonth = n.selectedMonthYear.split("-")[0], n.selectedyear = n.selectedMonthYear.split("-")[1], r.Pagination.Page = 1, n.dategenration(), n.monthenddate = n.noOfDays, n.dateupdatetion(), u(r, "dropdown"))
        };
        n.dateupdatetion = function() {
            var t = "T00:00:00Z",
                i = "T23:59:59Z";
            n.monthenddate ? (n.selectedstartdate = n.selectedyear + "-" + n.selectedmonth + "-" + n.monthstartdate, n.startdate = n.selectedstartdate + t, r.Filters[0].Start = n.startdate, n.selectedenddate = n.selectedyear + "-" + n.selectedmonth + "-" + n.monthenddate, n.enddate = n.selectedenddate + i, r.Filters[0].End = n.enddate) : (n.selecteddate = n.selectedyear + "-" + n.selectedmonth + "-" + n.selectedDate, n.startdate = n.selecteddate + t, n.enddate = n.selecteddate + i, r.Filters[0].Start = n.startdate, r.Filters[0].End = n.enddate)
        };
        n.dategenration = function() {
            var i, t;
            for (n.selectedmonth && (n.monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]), n.monthyear = n.monthNames[n.selectedmonth - 1] + " " + n.selectedyear, n.noOfDays = e(n.selectedmonth, n.selectedyear), i = [], t = 1; t <= n.noOfDays; t++) t < 10 && (t = "0" + t), i.push(t);
            n.daysArray = i
        };
        n.changeDate = function() {
            n.selectedDate ? (n.monthenddate = "", n.selectedmonth = n.selectedMonthYear.split("-")[0], n.selectedyear = n.selectedMonthYear.split("-")[1], n.dategenration(), n.dateupdatetion(), r.Pagination.Page = 1, u(r, "dropdown")) : n.changeMonthYear()
        };
        n.viewMore = function() {
            r.Pagination.Page = r.Pagination.Page + 1;
            u(r, "viewMore")
        };
        n.dategenration();
        f()
    }
    angular.module("m1cp.portal.microsites").controller("serviceAnnouncement", n);
    n.$inject = ["$scope", "$compile", "serviceAnnouncementdetail"]
}(),
function() {
    "use strict";

    function n(n, t, i) {
        function u() {
            var u = document.getElementById("eventAnnoucment"),
                t = angular.element(u).children(),
                i, r;
            t.length && (i = t[t.length - 1], r = i.getAttribute("data-hasnextpage"), n.Viewall = r == "True")
        }

        function f(r, f) {
            var e = i.geteventAnnouncementdetail(r);
            e.then(function(i) {
                var s = i,
                    h = t(s),
                    r = h(n),
                    e = document.getElementById("eventAnnoucment"),
                    o = angular.element(e);
                f == "dropdown" ? o.html(r) : o.append(r);
                t(e)(n);
                u()
            }, function() {})
        }

        function e(n, t) {
            return new Date(t, n, 0).getDate()
        }
        n.daysArray = [];
        var r = request;
        n.selectedMonthYear = serverdate;
        n.viewmoreflag = !1;
        n.yearFlag = !1;
        n.selectedmonth = n.selectedMonthYear.split("-")[0];
        n.selectedyear = n.selectedMonthYear.split("-")[1];
        n.changeMonthYear = function() {
            n.selectedMonthYear = n.optionSelected;
            n.selectedDate;
            n.selectedmonth = n.selectedMonthYear.split("-")[0];
            n.selectedyear = n.selectedMonthYear.split("-")[1];
            n.dategenration();
            n.monthstartdate = 1;
            n.monthenddate = n.noOfDays;
            r.Pagination.Page = 1;
            n.dateupdatetion();
            f(r, "dropdown")
        };
        n.dateupdatetion = function() {
            n.selectedstartdate = n.selectedyear + "-" + n.selectedmonth + "-" + n.monthstartdate;
            n.startdate = n.selectedstartdate + "T00:00:00Z";
            r.Filters[0].Start = n.startdate;
            n.selectedenddate = n.selectedyear + "-" + n.selectedmonth + "-" + n.monthenddate;
            n.enddate = n.selectedenddate + "T23:59:59Z";
            r.Filters[0].End = n.enddate
        };
        n.dategenration = function() {
            var i, t;
            for (n.selectedmonth && (n.monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]), n.monthyear = n.monthNames[n.selectedmonth - 1] + " " + n.selectedyear, n.noOfDays = e(n.selectedmonth, n.selectedyear), i = [], t = 1; t <= n.noOfDays; t++) t < 10 && (t = "0" + t), i.push(t);
            n.daysArray = i
        };
        n.viewMore = function() {
            n.monthenddate = "";
            r.Pagination.Page = r.Pagination.Page + 1;
            f(r, "viewMore")
        };
        n.dategenration();
        u()
    }
    angular.module("m1cp.portal.microsites").controller("eventAnnouncement", n);
    n.$inject = ["$scope", "$compile", "eventAnnouncementdetail"]
}(),
function() {
    "use strict";

    function n(n, t, i, r, u) {
        function b(t) {
            l && l.geocode({
                address: t,
                componentRestrictions: {
                    country: "SG"
                }
            }, function(i) {
                i ? (n.currentLocation.currentLat = i[0].geometry.location.lat(), n.currentLocation.currentLng = i[0].geometry.location.lng(), n.$root.$$phase != "$apply" && n.$root.$$phase != "$digest" && n.$apply(), n.nearestStoretoShow = h(n.currentLocation.currentLat, n.currentLocation.currentLng, n.searchradius), n.$root.$$phase != "$apply" && n.$root.$$phase != "$digest" && n.$apply(), n.CopyNearestStore = [], n.CopyNearestStore = angular.copy(n.nearestStoretoShow), n.createMap(parseFloat(n.currentLocation.currentLat), parseFloat(n.currentLocation.currentLng)), c()) : alert(t + " not found")
            })
        }

        function g(t, i) {
            for (var f, r = n.count * 25, u = 0; r < n.nearestStoretoShow.length && u < 25; r++, u++) i == "OK" && t != null ? t.rows[0].elements[u].distance && t.rows[0].elements[u].distance.text ? (f = t.rows[0].elements[u].distance.text.split(",").join("").split(" "), n.nearestStoretoShow[r].distance = f[1] == "km" ? parseFloat(f[0]) * 1e3 : parseFloat(f[0]), n.nearestStoretoShow[r].showDistance = t.rows[0].elements[u].distance.text) : (n.nearestStoretoShow[r].distance = Number.MAX_VALUE, n.nearestStoretoShow[r].showDistance = "") : (n.nearestStoretoShow[r].distance = Number.MAX_VALUE, n.nearestStoretoShow[r].showDistance = ""), n.$root.$$phase != "$apply" && n.$root.$$phase != "$digest" && n.$apply();
            if (r === n.nearestStoretoShow.length) {
                n.count = 0;
                n.isDataFetched = !0;
                i == "OK" && (n.isGeolocationEnabled || n.userZipCode) ? n.nearestStoretoShow.sort(function(n, t) {
                    return n.distance - t.distance
                }) : n.nearestStoretoShow.sort(function(n, t) {
                    return n.StoreTitle > t.StoreTitle ? 1 : -1
                });
                n.$root.$$phase != "$apply" && n.$root.$$phase != "$digest" && n.$apply();
                for (let t = 0; t < n.listCounter; t++) d(n.nearestStoretoShow[t])
            } else n.count++, n.createMap(parseFloat(n.currentLocation.currentLat), parseFloat(n.currentLocation.currentLng))
        }

        function k() {
            for (var n = 0; n < f.length; n++) f[n] && f[n].setMap(null)
        }

        function nt(n, t, i, r, u) {
            var e = Math.PI * n / 180,
                o = Math.PI * i / 180,
                s = t - r,
                h = Math.PI * s / 180,
                f = Math.sin(e) * Math.sin(o) + Math.cos(e) * Math.cos(o) * Math.cos(h);
            return f = Math.acos(f), f = f * 180 / Math.PI, f = f * 60 * 1.1515, u == "K" && (f = f * 1.609344), u == "N" && (f = f * .8684), f
        }

        function d(t) {
            var i = new google.maps.Marker({
                    map: s,
                    label: {
                        text: n.labels[v++ % n.labels.length],
                        fontFamily: "Gotham SSm B, Gotham SSm A",
                        fontSize: "15px",
                        fontWeight: "700"
                    },
                    icon: p,
                    position: {
                        lat: parseFloat(t.Latitude),
                        lng: parseFloat(t.Longitude)
                    }
                }),
                r = t.StoreTitle,
                u = t.showDistance,
                e = t.Description,
                o = "<div class='store' style='max-width: 400px;'><b><p class='name'>" + r + "<\/p><\/b><p class=''><b>Address:<\/b> <br/>" + e + "<\/p><p><b>Distance<\/b> : " + u + "<\/p><\/div>";
            google.maps.event.addListener(i, "click", function(n, t, i) {
                return function() {
                    i.setContent(t);
                    i.open(s, n)
                }
            }(i, o, a));
            f.push(i)
        }

        function tt() {
            n.listCounter = n.nearestStoretoShow.length <= e ? n.nearestStoretoShow.length : e
        }

        function it() {
            n.hideviewmoreLess = n.nearestStoretoShow.length <= e ? !1 : !0
        }

        function rt() {
            function t() {
                n.isGeolocationEnabled = !1;
                n.currentLocation = {
                    currentLat: "1.383049",
                    currentLng: "103.746872"
                };
                n.initialLocation = {};
                n.initialLocation.lat = n.currentLocation.currentLat;
                n.initialLocation.lng = n.currentLocation.currentLng;
                n.nearestStoretoShow = h(n.currentLocation.currentLat, n.currentLocation.currentLng, n.searchradius);
                n.$root.$$phase != "$apply" && n.$root.$$phase != "$digest" && n.$apply();
                n.CopyNearestStore = [];
                n.CopyNearestStore = angular.copy(n.nearestStoretoShow);
                n.createMap(parseFloat(n.currentLocation.currentLat), parseFloat(n.currentLocation.currentLng));
                c()
            }

            function i(t) {
                n.isGeolocationEnabled = !0;
                n.currentLocation = {
                    currentLat: t.coords.latitude,
                    currentLng: t.coords.longitude
                };
                n.initialLocation = {};
                n.initialLocation.lat = n.currentLocation.currentLat;
                n.initialLocation.lng = n.currentLocation.currentLng;
                n.nearestStoretoShow = h(n.currentLocation.currentLat, n.currentLocation.currentLng, n.searchradius);
                n.$root.$$phase != "$apply" && n.$root.$$phase != "$digest" && n.$apply();
                n.CopyNearestStore = [];
                n.CopyNearestStore = angular.copy(n.nearestStoretoShow);
                n.createMap(parseFloat(n.currentLocation.currentLat), parseFloat(n.currentLocation.currentLng));
                c()
            }
            navigator.geolocation ? navigator.geolocation.getCurrentPosition(i, t) : n.currentLocation = {
                currentLat: "",
                currentLng: ""
            }
        }

        function h(t, i, r) {
            var f, u;
            for (n.nearestStoretoShow = [], f = [], ft(), u = 0; u < n.allStoreShopType.length; u++) nt(t, i, n.allStoreShopType[u].Latitude, n.allStoreShopType[u].Longitude, "M") < r && f.push(n.allStoreShopType[u]);
            return f
        }

        function ut() {
            var i = t.getstores();
            i.then(function(t) {
                n.allStoreList = angular.fromJson(t);
                et();
                n.userZipCode ? b(n.userZipCode) : rt()
            }, function() {})
        }

        function ft() {
            n.allStoreShopType = JSON.parse(JSON.stringify(r("filter")(n.allStoreWithSubType, {
                StoreType: n.selectedShopType
            }, !0)))
        }

        function et() {
            for (var i, r, t = 0; t < n.allStoreList.Stores.length; t++)
                for (i = 0; i < n.allStoreList.Stores[t].StoreTypes.length; i++)
                    for (r = 0; r < n.allStoreList.Stores[t].StoreTypes[i].StoresList.length; r++) n.allStoreList.Stores[t].StoreTypes[i].StoresList[r].StoreSubType = n.allStoreList.Stores[t].StoreTypes[i].StoreType, n.allStoreList.Stores[t].StoreTypes[i].StoresList[r].StoreSubTypeTitle = n.allStoreList.Stores[t].StoreTypes[i].StoreTitle, n.allStoreList.Stores[t].StoreTypes[i].StoresList[r].StoreType = n.allStoreList.Stores[t].StoreType, n.allStoreList.Stores[t].StoreTypes[i].StoresList[r].showMapIcon = !0, n.allStoreList.Stores[t].StoreTypes[i].StoresList[r].showMoreLess = !1, n.allStoreList.Stores[t].StoreTypes[i].StoresList[r].detailContainer = !0, n.allStoreWithSubType.push(n.allStoreList.Stores[t].StoreTypes[i].StoresList[r])
        }

        function c() {
            n.filterListArray = [];
            for (var t = 0; t < n.nearestStoretoShow.length; t++) n.filterListArray.indexOf(n.nearestStoretoShow[t].StoreSubTypeTitle) === -1 && n.nearestStoretoShow[t].StoreSubTypeTitle !== "Default" && n.filterListArray.push(n.nearestStoretoShow[t].StoreSubTypeTitle);
            n.hideFilterOption = n.filterListArray.length < 1 ? !0 : !1;
            n.$root.$$phase != "$apply" && n.$root.$$phase != "$digest" && n.$apply();
            $("#filterlist").collapse()
        }
        var o, s, l, a, y, v, f, e, p, w;
        u.search().zipCode && (n.userZipCode = u.search().zipCode);
        n.selectedShopType = u.search().shopType ? u.search().shopType : "M1 Shops";
        o = i.innerWidth;
        $(window).resize(function() {
            o = i.innerWidth
        });
        n.labels = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        v = 0;
        n.selectedSubtype = "";
        n.nearestStoretoShow = [];
        n.allStoreShopType = [];
        n.allStoreWithSubType = [];
        f = [];
        n.hideviewmoreLess = !1;
        e = 5;
        n.viewmoreFlag = !0;
        n.showLink = !0;
        n.hideFilterOption = !1;
        n.searchradius = 0;
        n.mapid = "map";
        n.isGeolocationEnabled = !1;
        n.count = 0;
        n.isDataFetched = !1;
        n.currentLocation = {
            currentLat: "",
            currentLng: ""
        };
        p = {
            url: "/images/Pin-1x-mob.png",
            origin: new google.maps.Point(0, 0),
            labelOrigin: new google.maps.Point(22, 20)
        };
        w = {
            zoom: 11,
            center: {
                lat: 1.383049,
                lng: 103.74378290000004
            },
            zoomControl: !0,
            zoomControlOptions: {},
            mapTypeControl: !1,
            scaleControl: !1,
            streetViewControl: !1,
            rotateControl: !0,
            fullscreenControl: !1
        };
        n.setmapID = function(t) {
            n.mapid = t;
            s = new google.maps.Map(document.getElementById(n.mapid), w);
            l = new google.maps.Geocoder;
            a = new google.maps.InfoWindow;
            y = new google.maps.DistanceMatrixService
        };
        n.listCounter = e;
        n.filterStoreClicked = function(t) {
            n.nearestStoretoShow = r("filter")(n.CopyNearestStore, t, !0);
            n.createMap(parseFloat(n.currentLocation.currentLat), parseFloat(n.currentLocation.currentLng));
            n.showLink = !0
        };
        n.viewMoreStoreList = function() {
            n.viewmoreFlag = !1;
            n.showLink = !1;
            n.listCounter = 25 > n.nearestStoretoShow.length ? n.nearestStoretoShow.length : 25;
            n.createMap(parseFloat(n.currentLocation.currentLat), parseFloat(n.currentLocation.currentLng))
        };
        n.viewLessStoreList = function() {
            n.viewmoreFlag = !1;
            n.showLink = !n.showLink;
            n.listCounter = e;
            n.createMap(parseFloat(n.currentLocation.currentLat), parseFloat(n.currentLocation.currentLng))
        };
        n.getStoresbtn = function() {
            n.isDataFetched = !1;
            n.hideviewmoreLess = !1;
            e = 5;
            n.viewmoreFlag = !0;
            n.showLink = !0;
            n.hideFilterOption = !1;
            n.userZipCode ? b(n.userZipCode) : (n.currentLocation.currentLat = n.initialLocation.lat, n.currentLocation.currentLng = n.initialLocation.lng, n.nearestStoretoShow = h(n.currentLocation.currentLat, n.currentLocation.currentLng, n.searchradius), n.$root.$$phase != "$apply" && n.$root.$$phase != "$digest" && n.$apply(), n.CopyNearestStore = [], n.CopyNearestStore = angular.copy(n.nearestStoretoShow), n.createMap(parseFloat(n.currentLocation.currentLat), parseFloat(n.currentLocation.currentLng)), c());
            n.showLink = !0
        };
        n.moredetailshop = function(t, i) {
            k();
            f[t] && f[t].setMap(s);
            n.hideviewmoreLess = !1;
            n.hideFilterOption = !0;
            for (var r = 0; r < n.nearestStoretoShow.length; r++) i.StoreTitle == n.nearestStoretoShow[r].StoreTitle && r == t ? (n.nearestStoretoShow[r].showMoreLess = !0, n.nearestStoretoShow[r].detailContainer = !0, o <= 991 && (n.nearestStoretoShow[r].showMapIcon = !1)) : (n.nearestStoretoShow[r].detailContainer = !1, n.nearestStoretoShow[r].showMoreLess = !1, o <= 991 && (n.nearestStoretoShow[r].showMapIcon = !0))
        };
        n.Lessdetailshop = function(t, i) {
            n.hideviewmoreLess = !0;
            n.viewmoreFlag = !1;
            n.hideFilterOption = n.filterListArray.length < 1 ? !0 : !1;
            a.close();
            n.createMap(parseFloat(n.currentLocation.currentLat), parseFloat(n.currentLocation.currentLng));
            for (var r = 0; r < n.nearestStoretoShow.length; r++) n.nearestStoretoShow[r].detailContainer = !0, i.StoreTitle == n.nearestStoretoShow[r].StoreTitle && r == t ? (n.nearestStoretoShow[r].showMoreLess = !1, o <= 991 && (n.nearestStoretoShow[r].showMapIcon = !0)) : o <= 991 && (n.nearestStoretoShow[r].showMapIcon = !0)
        };
        n.createMap = function(t, i) {
            var u, r, e;
            if (s.setCenter({
                    lat: t,
                    lng: i
                }), k(), v = 0, f = [], n.viewmoreFlag && tt(), it(), u = [], n.viewmoreFlag = !0, n.count <= Math.floor(n.nearestStoretoShow.length / 25) + 1 && !n.isDataFetched) {
                for (r = n.count * 25, e = 0; r < n.nearestStoretoShow.length && e < 25; r++, e++) u.push({
                    lat: parseFloat(n.nearestStoretoShow[r].Latitude),
                    lng: parseFloat(n.nearestStoretoShow[r].Longitude)
                });
                y.getDistanceMatrix({
                    origins: [{
                        lat: t,
                        lng: i
                    }],
                    destinations: u,
                    travelMode: "DRIVING"
                }, g)
            }
            if (n.isDataFetched)
                for (let t = 0; t < n.listCounter; t++) d(n.nearestStoretoShow[t])
        };
        ut()
    }
    angular.module("m1cp.portal.microsites").controller("m1cpContactUsController", n);
    n.$inject = ["$scope", "contactUsDetailService", "$window", "$filter", "$location"]
}(),
function() {
    "use strict";

    function n(n, t, i) {
        function r(r) {
            var u = t.getDataPackData(r);
            u.then(function(t) {
                var r = angular.element(document.getElementById("datapack-component")),
                    u, f;
                r.removeClass("visible-none");
                r.html("");
                u = i(t);
                f = u(n);
                r.append(f)
            }, function() {})
        }
        n.country = "";
        n.getDataPack = function() {
            n.country != "" && r(n.country)
        }
    }
    angular.module("m1cp.portal.microsites").controller("datapassportController", n);
    n.$inject = ["$scope", "dataPassportService", "$compile"]
}(),
function() {
    "use strict";

    function n(n, t) {
        function u() {
            for (var i, t = 0; t < n.dppdataArr.SingleDPP.DPP.length; t++)
                for (i = 0; i < n.dppdataArr.SingleDPP.DPP[t].Countries.length; i++)
                    if (n.dppdataArr.SingleDPP.DPP[t].Countries[i].Code.toLocaleLowerCase() == n.selectedCoutryParams.toLocaleLowerCase()) {
                        n.dppSelectedOption.selectedDatapassportItem = n.dppdataArr.SingleDPP.DPP[t].Countries[i].Code;
                        r(n.dppdataArr.SingleDPP.DPP[t], n.dppdataArr.SingleDPP.DPP[t].Countries[i]);
                        break
                    }
        }

        function r(t, i) {
            n.selectedDppDetails = t;
            n.selectedDppId = i.ScId;
            n.selectedDppTitle = t.Message.replace("[COUNTRY]", i.Title)
        }
        n.dppSelectedOption = {
            selectedDatapassportItem: ""
        };
        n.selectedDppDetails = {};
        n.selectedDppTitle = "";
        n.dppdataArr = dppmaindataArr;
        n.selectedCoutryParams = "";
        var i = dppmaindataArr.RedirectionPageURL;
        t.search().selecteddppCountry && (n.selectedCoutryParams = t.search().selecteddppCountry, u());
        n.changeSingledppfn = function(n, t) {
            r(n, t)
        };
        n.changeMultipledppfn = function(t) {
            n.selectedDppDetails = t;
            n.selectedDppTitle = t.Message;
            n.selectedDppId = n.dppSelectedOption.selectedDatapassportItem
        };
        n.changeSubscriptionType = function(t) {
            n.subscriptiontypeTitle = t.Title
        };
        n.submitdppform = function() {
            n.subscriptionMessage = n.selectedDppTitle.replace("[SUBSCRIPTION]", n.subscriptiontypeTitle)
        };
        n.confirmDppSelection = function() {
            window.location.href = i.indexOf("?") > -1 ? i + "&dpp=" + n.selectedDppId + "&r=" + n.selectedSubscriptionType : i + "?dpp=" + n.selectedDppId + "&r=" + n.selectedSubscriptionType
        }
    }
    angular.module("m1cp.portal.microsites").controller("subscribeDataPassportController", n);
    n.$inject = ["$scope", "$location"]
}(),
function() {
    "use strict";

    function n(n, t, i) {
        function r(r) {
            var u = i.getFinancialResult(r);
            u.then(function(i) {
                var r = i,
                    u = t(r),
                    f = u(n),
                    e = document.getElementById("financialResultContainer"),
                    o = angular.element(e).parent();
                o.replaceWith(f)
            }, function() {})
        }
        n.changeFinancialYear = function() {
            r(n.financialYearSelected)
        }
    }
    angular.module("m1cp.portal.microsites").controller("financialresultController", n);
    n.$inject = ["$scope", "$compile", "financialResults"]
}(),
function() {
    "use strict";

    function n(n, t) {
        location.href.match(/css_feedbackthankyoupage/i) || angular.element(document.getElementsByClassName("text-component")).css("display", "none");
        n.showFeedback = function() {
            t.mainForm = !0;
            angular.element(document.getElementsByClassName("text-component")).css("display", "block")
        }
    }
    angular.module("m1cp.portal.microsites").controller("askmindyController", n);
    n.$inject = ["$scope", "$rootScope"]
}();